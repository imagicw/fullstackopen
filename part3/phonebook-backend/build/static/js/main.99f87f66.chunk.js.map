{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","handleFilter","onChange","Person","persons","handleDelete","map","person","name","number","onClick","id","window","confirm","PersonForm","handleNewPerson","handleNewName","handleNewNumber","newName","newNumber","onSubmit","value","type","Notification","message","messageType","className","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","del","delete","App","useState","setPersons","setNewName","setNewNumber","filterName","setFilterName","setMessage","setMessageType","useEffect","initial","personsToShow","filter","toLowerCase","indexOf","event","target","preventDefault","personObject","findPerson","find","updated","setTimeout","catch","error","concat","Persons","updatedPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99f87f66.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ handleFilter }) =>\n{\n  return (\n    <div>\n      filter shown with <input onChange={handleFilter} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ persons, handleDelete }) =>\n{\n  const remove = (id, name) =>\n  {\n    if(window.confirm(`delete ${name}`))\n    {\n      handleDelete(id)\n    }\n  }\n  return (\n    <>\n      {persons.map(person => \n        <div key={person.name}>{person.name} {person.number} <button onClick={() => remove(person.id, person.name)}>delete</button></div>\n      )}\n    </>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst PersonForm = ({ handleNewPerson, handleNewName, handleNewNumber, newName, newNumber }) =>\n{\n  return (\n    <form onSubmit={handleNewPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNewName} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, messageType }) =>\n{\n  if(message === null)\n  {\n    return null\n  }\n\n  return (\n    <div className={messageType}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () =>\n{\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) =>\n{\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) =>\n{\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) =>\n{\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nconst personService = { getAll, create, update, del}\n\nexport default personService","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n\n  useEffect(() =>\n  {\n    personService\n      .getAll()\n      .then(initial =>\n        {\n          setPersons(initial)\n        })\n  },[])\n\n  const handleNewName = (event) => setNewName(event.target.value)\n  const handleNewNumber = (event) => setNewNumber(event.target.value)\n  const handleFilter = (event) => setFilterName(event.target.value)\n  const handleNewPerson = (event) =>\n  {\n    event.preventDefault()\n\n    const personObject =\n    {\n      name: newName,\n      number: newNumber,\n    }\n    const findPerson = persons.find(person => person.name === newName)\n    \n    if(findPerson)\n    {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n      {\n        personService\n          .update(findPerson.id, personObject)\n          .then(updated =>\n          {\n            setPersons(persons.map(person => person.id !== findPerson.id ? person : updated))\n            setNewName('')\n            setNewNumber('')\n            setMessage(`updated ${findPerson.name} with ${personObject.number}`)\n            setMessageType('success')\n            setTimeout(() => setMessage(null), 3000)\n          })\n          .catch(error =>\n          {\n            setMessage(error.response.data.error)\n            setMessageType('error')\n            setTimeout(() => setMessage(null), 3000)\n          })\n      }\n      return\n    }\n\n    personService\n      .create(personObject)\n      .then(response =>\n      {\n        setPersons(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${personObject.name}`)\n        setMessageType('success')\n        setTimeout(() => setMessage(null), 3000)\n      })\n      .catch(error =>\n      {\n        setMessage(error.response.data.error)\n        setMessageType('error')\n        setTimeout(() => setMessage(null), 3000)\n      })\n\n  }\n\n  const handleDelete = (id) =>\n  {\n    personService\n      .del(id)\n      .then(() =>\n      {\n        const updatedPersons = persons.filter(person => person.id !== id)\n        setPersons(updatedPersons)\n        setMessage('delete successfully')\n        setMessageType('success')\n        setTimeout(() => setMessage(null), 3000)\n      })\n      .catch(error =>\n      {\n        setMessage('deleting failed')\n        setMessageType('error')\n        setTimeout(() => setMessage(null), 3000)\n      })\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().indexOf(filterName.toLowerCase()) > -1)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <Filter handleFilter={handleFilter} />\n      <h3>add a new</h3>\n      <PersonForm\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        handleNewPerson={handleNewPerson}\n        newName={newName}\n        newNumber={newNumber}\n        />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}